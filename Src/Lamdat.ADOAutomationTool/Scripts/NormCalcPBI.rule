if (!string.IsNullOrWhiteSpace(Self.WorkItemType) &&
    Self.WorkItemType.Equals("Product Backlog Item"))
{
    // Logger.Warning($"NormCalcPBI is executed");

    if (Self.Parent != null)
    {
        var parent = await Client.GetWorkItem(Self.Parent.RelatedWorkItemId);
        
        if (parent.Id == 0) {
            Logger.Warning($"Nothing will be done since no parent was found for Work Item Id: {Self.Id}, Title: '{Self.Title}, WorkItemType:  {Self.WorkItemType}");
        }
        else
        {
            if (parent.WorkItemType == "Feature")
            {
                var parentTitle = parent.GetField<string>("System.Title");
                
                if (Self.GetField<string>("Labs.ParentTitle") != parentTitle)
                {
                    Self.SetField("Labs.ParentTitle", parentTitle);
                    Logger.Information($"Updated PBI with ID: {Self.Id}, workItemType: {Self.WorkItemType}, Labs.ParentTitle = {parentTitle}");
                }
                
                var completedWork = parent.GetField<double>("Microsoft.VSTS.Scheduling.CompletedWork", 0d);
                var featureType = parent.GetField<string>("Labs.FeatureType");  

                if (completedWork >= 20 && featureType == "Task") 
                {		
                    if (parent.GetField<string>("Labs.ExternalState") != "NeedAcceptanceTesting")
                    {
                        parent.SetField("Labs.ExternalState", "NeedAcceptanceTesting"); // Acceptance Testing is required
                        
                        await Client.SaveWorkItem(parent, true);
                        Logger.Information($"Updated Feature with ID: {parent.Id}, workItemType: {parent.WorkItemType}, Labs.ExternalState = NeedAcceptanceTesting");
                    }
                } 
            }   
        }
    }
}